#!/bin/bash
set -euo pipefail

# â”€â”€â”€ COLORS â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
GREEN='\033[0;32m'
BLUE='\033[1;34m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

log_info()    { echo -e "${BLUE}â„¹ $1${NC}"; }
log_success() { echo -e "${GREEN}âœ” $1${NC}"; }
log_error()   { echo -e "${RED}âœ– $1${NC}"; }
log_warn()    { echo -e "${YELLOW}âš  $1${NC}"; }

# â”€â”€â”€ GO TO FUNCTION SOURCE â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
log_info "ðŸ“¦ Building Go Lambda function..."
cd "$(dirname "$0")/../functions/source/soci-index-generator-lambda"

# â”€â”€â”€ SET GO PROXY â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
export GOPROXY=direct

# â”€â”€â”€ CLEAN OLD ARTIFACTS â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
log_info "ðŸ§¹ Cleaning old build files..."
rm -f bootstrap soci_index_generator_lambda.zip

# â”€â”€â”€ DOWNLOAD DEPENDENCIES â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# log_info "ðŸ”„ Downloading Go module dependencies..."
# if ! go mod download > /dev/null 2>&1; then
#   log_error "Failed to download Go module dependencies"
#   log_warn  "Please check your internet connection or go.mod"
#   exit 1
# fi
# log_success "Go module dependencies downloaded"

pwd
ls -la

# â”€â”€â”€ BUILD LAMBDA â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
log_info "ðŸ›  Building Go Lambda binary with Make..."
if ! make > /dev/null 2>&1; then
  log_error "Failed to build Go Lambda function"
  log_warn  "Check the Makefile output for build errors"
  exit 1
fi

pwd
ls -la

# â”€â”€â”€ VERIFY ZIP OUTPUT â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
if [ ! -f "soci_index_generator_lambda.zip" ]; then
  log_error "Expected output 'soci_index_generator_lambda.zip' not found"
  exit 1
fi

log_success "Go Lambda function built successfully"

echo "DEBUG: ZIP_SOURCE=$ZIP_SOURCE"
echo "DEBUG: TF_CALLING_REPO_ROOT=$CALLING_REPO_ROOT"
ls -l
pwd
# Copy ZIP
cp soci_index_generator_lambda.zip ../../../../../../

ls -l
pwd
echo "âœ… Copied ZIP to $CALLING_REPO_ROOT/soci_index_generator_lambda.zip"
